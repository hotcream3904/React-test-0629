{"ast":null,"code":"var _jsxFileName = \"/Users/choeeunji/Desktop/React_3/basic/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Son(props) {\n  //상속받기 위해서 자식인 Son이 props를 넣음.\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: `나는 ${props.motherName}의 딸 그리고 ${props.grandFatherName}의 손자`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = Son;\nfunction Mother(props) {\n  //상속을 받으려는 자식은 props를 넣어줘야 한다. 그럼저기 16번째줄에 있는게 상속됨.\n  console.log(props);\n  const name = \"강수야\";\n  return /*#__PURE__*/_jsxDEV(Son, {\n    motherName: name,\n    grandFatherName: props.grandFatherName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this); //Son한테는 이걸 상속해준단 뜻.\n}\n_c2 = Mother;\nfunction GrandFather() {\n  const name = \"강병기\";\n  return /*#__PURE__*/_jsxDEV(Mother, {\n    grandFatherName: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n_c3 = GrandFather;\nexport default GrandFather; //여기는 최상위 컴포넌트와 명이 같아야 한다.\n\n//return문 밑으로는 무조건 최상위 태그가 하나 있어야 한다.\n//전역상태관리 props.driling 을 해결해줌\n//contestAPI 순정 react에서 만든거 기능이 떨어짐\n//redux !!! 헐~ 그렇구나!\n//recoil 아항 ㅋㅋ \nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Son\");\n$RefreshReg$(_c2, \"Mother\");\n$RefreshReg$(_c3, \"GrandFather\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Son","props","console","log","children","motherName","grandFatherName","fileName","_jsxFileName","lineNumber","columnNumber","_c","Mother","name","_c2","GrandFather","_c3","$RefreshReg$"],"sources":["/Users/choeeunji/Desktop/React_3/basic/src/App.js"],"sourcesContent":["import React from 'react'\n\nfunction Son(props) { //상속받기 위해서 자식인 Son이 props를 넣음.\n  console.log(props)\n  return <div children={`나는 ${props.motherName}의 딸 그리고 ${props.grandFatherName}의 손자`}/>\n}\n\nfunction Mother(props) { //상속을 받으려는 자식은 props를 넣어줘야 한다. 그럼저기 16번째줄에 있는게 상속됨.\n  console.log(props);\n  const name = \"강수야\";\n  return <Son motherName={name} grandFatherName={props.grandFatherName} />; //Son한테는 이걸 상속해준단 뜻.\n}\n\nfunction GrandFather() {\n  const name = \"강병기\";\n  return <Mother grandFatherName={name} />;\n}\n\nexport default GrandFather; //여기는 최상위 컴포넌트와 명이 같아야 한다.\n\n//return문 밑으로는 무조건 최상위 태그가 하나 있어야 한다.\n//전역상태관리 props.driling 을 해결해줌\n//contestAPI 순정 react에서 만든거 기능이 떨어짐\n//redux !!! 헐~ 그렇구나!\n//recoil 아항 ㅋㅋ \n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAE;EACpBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,oBAAOF,OAAA;IAAKK,QAAQ,EAAG,MAAKH,KAAK,CAACI,UAAW,WAAUJ,KAAK,CAACK,eAAgB;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACvF;AAACC,EAAA,GAHQX,GAAG;AAKZ,SAASY,MAAMA,CAACX,KAAK,EAAE;EAAE;EACvBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAMY,IAAI,GAAG,KAAK;EAClB,oBAAOd,OAAA,CAACC,GAAG;IAACK,UAAU,EAAEQ,IAAK;IAACP,eAAe,EAAEL,KAAK,CAACK;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAC;AAC5E;AAACI,GAAA,GAJQF,MAAM;AAMf,SAASG,WAAWA,CAAA,EAAG;EACrB,MAAMF,IAAI,GAAG,KAAK;EAClB,oBAAOd,OAAA,CAACa,MAAM;IAACN,eAAe,EAAEO;EAAK;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1C;AAACM,GAAA,GAHQD,WAAW;AAKpB,eAAeA,WAAW,CAAC,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AAAA,IAAAJ,EAAA,EAAAG,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}